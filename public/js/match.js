/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/match.js":
/*!*******************************!*\
  !*** ./resources/js/match.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

<<<<<<< HEAD
eval("//alert(mujercitas[1].nombre);\nvar nombresM = [];\nvar fotosM = [];\nvar mujercitas = JSON.parse(localStorage.getItem(\"mujeres\"));\n\nfor (i = 0; i < mujercitas.length; i++) {\n  nombresM.push(mujercitas[i].nombre + \" \" + mujercitas[i].apellidos);\n  fotosM.push(mujercitas[i].foto);\n} //Parte del Juego\n\n\nvar juego;\n\njuego = function () {\n  numElementos = fotosM.length - 1;\n  imagenes = new Array();\n  arraydescripcion = new Array();\n  arraynombres = new Array();\n\n  do {\n    index = Math.floor(Math.random() * (numElementos - 0 + 1)) + 0;\n\n    if (index <= numElementos && imagenes.indexOf(fotosM[index]) == -1) {\n      imagenes.push(fotosM[index]);\n      arraynombres.push(nombresM[index]);\n      arraydescripcion.push(nombresM[index]);\n    }\n  } while (imagenes.length < numElementos);\n\n  var vidas = 6,\n      lista1,\n      lista2; //Funcion para crear las cartas\n\n  crearCartas = function crearCartas() {\n    try {\n      //var contenedor = document.querySelector('.contenedor');\n      var nombres = document.querySelector('.nombres');\n      var fotos = document.querySelector('.fotos');\n      var item_html = '<div class=\"item\" onclick=\"clic(this)\" data-baraja=\"{baraja}\" data-indice=\"{indice}\"></div>';\n      lista1 = distribuirCartas(arraynombres);\n      lista2 = imagenes;\n      var cartas_html1 = \"\";\n      var cartas_html2 = \"\";\n\n      for (var i = 0; i < arraynombres.length; i++) {\n        //aqui creamos las cartas ocultas y sustituimos sus indices con los nombres de los animales\n        cartas_html1 += item_html.replace(\"{baraja}\", 1).replace(\"{indice}\", lista1[i]);\n      }\n\n      for (x = 0; x < imagenes.length; x++) {\n        //aqui creamos las cartas con fotos de los animales e indices sus nombres\n        var item_html = '<img class=\"item\" onclick=\"clic(this)\" data-baraja=\"{baraja}\" data-indice=\"{indice}\" src=\"../assets/Fotos_mujeres/' + imagenes[x] + '\" height=\"100px\" >';\n        cartas_html2 += item_html.replace(\"{baraja}\", 2).replace(\"{indice}\", arraydescripcion[x]);\n      } //contenedor.innerHTML = cartas_html;\n\n\n      nombres.innerHTML = cartas_html1;\n      fotos.innerHTML = cartas_html2;\n    } catch (error) {\n      console.log(error);\n    }\n  }, //Funcion para ejecutar la accion por cada click que hacemos\n  clic = function clic(element) {\n    try {\n      var cartas_activas = document.querySelectorAll(\".sin-fondo-item\");\n\n      if (cartas_activas.length == 2) {\n        for (var i = 0; i < cartas_activas.length; i++) {\n          cartas_activas[i].classList.remove(\"sin-fondo-item\");\n          cartas_activas[i].innerHTML = \"\";\n        }\n\n        restarVidas();\n      }\n\n      if (cartas_activas.length == 1) {\n        if (cartas_activas[0].dataset.indice == element.dataset.indice && cartas_activas[0].dataset.baraja != element.dataset.baraja) {\n          element.innerHTML = \"<span class='numero-carta'></span>\";\n          cartas_activas[0].classList.remove(\"sin-fondo-item\");\n          cartas_activas[0].classList.add(\"checked-item\");\n          element.classList.add(\"checked-item\");\n        } else {\n          element.classList.add(\"sin-fondo-item\");\n          element.innerHTML = \"<span class='numero-carta'>\" + element.dataset.indice + \"</span>\";\n        }\n      } else {\n        element.classList.add(\"sin-fondo-item\");\n        element.innerHTML = \"<span class='numero-carta'>\" + element.dataset.indice + \"</span>\";\n      } //Si todas cartas estan verificadas, nos saca el mensaje de victoria\n\n\n      if (document.querySelectorAll(\".checked-item\").length == arraynombres.length * 2) {\n        var mensaje = document.querySelector(\"#contenedor-mensaje-victoria\");\n\n        if (mensaje.classList.contains(\"ocultar-mensaje\")) {\n          mensaje.classList.remove(\"ocultar-mensaje\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, //funcion para restar las vidas por cada fallo que cometemos\n  restarVidas = function restarVidas() {\n    try {\n      if (vidas == 1) {\n        var mensaje = document.querySelector(\"#contenedor-mensaje-derrota\");\n\n        if (mensaje.classList.contains(\"ocultar-mensaje\")) {\n          mensaje.classList.remove(\"ocultar-mensaje\");\n        }\n      }\n\n      document.querySelector(\".puntos\").querySelectorAll(\"img\")[0].remove();\n      --vidas;\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Funcion para repartir las cartas aleatoriamente\n\n  distribuirCartas = function distribuirCartas(arr) {\n    try {\n      var i, j, temp;\n\n      for (i = arr.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n      }\n\n      return new Array().concat(arr);\n    } catch (error) {\n      console.log(error);\n    }\n  }, init = function init() {\n    try {\n      crearCartas();\n      var botones = document.querySelectorAll(\".btn\");\n\n      for (var i = 0; i < botones.length; i++) {\n        botones[i].addEventListener('click', function () {\n          location.reload(true);\n        }, false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return {\n    init: init,\n    clic: clic\n  };\n}();\n\nwindow.onload = juego.init();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/match.js\n");
=======
eval("//alert(mujercitas[1].nombre);\nvar nombresM = [];\nvar fotosM = [];\nvar mujercitas = JSON.parse(localStorage.getItem(\"mujeres\"));\n\nfor (i = 0; i < mujercitas.length; i++) {\n  nombresM.push(mujercitas[i].nombre);\n  fotosM.push(mujercitas[i].foto);\n} //Parte del Juego\n\n\nvar juego;\n\njuego = function () {\n  numElementos = fotosM.length - 1;\n  imagenes = new Array();\n  arraydescripcion = new Array();\n  arraynombres = new Array();\n\n  do {\n    index = Math.floor(Math.random() * (numElementos - 0 + 1)) + 0;\n\n    if (index <= numElementos && imagenes.indexOf(fotosM[index]) == -1) {\n      imagenes.push(fotosM[index]);\n      arraynombres.push(nombresM[index]);\n      arraydescripcion.push(nombresM[index]);\n    }\n  } while (imagenes.length < numElementos);\n\n  var vidas = 6,\n      lista1,\n      lista2; //Funcion para crear las cartas\n\n  crearCartas = function crearCartas() {\n    try {\n      //var contenedor = document.querySelector('.contenedor');\n      var nombres = document.querySelector('.nombres');\n      var fotos = document.querySelector('.fotos');\n      var item_html = '<div class=\"item\" onclick=\"clic(this)\" data-baraja=\"{baraja}\" data-indice=\"{indice}\"></div>';\n      lista1 = distribuirCartas(arraynombres);\n      lista2 = imagenes;\n      var cartas_html1 = \"\";\n      var cartas_html2 = \"\";\n\n      for (var i = 0; i < arraynombres.length; i++) {\n        //aqui creamos las cartas ocultas y sustituimos sus indices con los nombres de los animales\n        cartas_html1 += item_html.replace(\"{baraja}\", 1).replace(\"{indice}\", lista1[i]);\n      }\n\n      for (x = 0; x < imagenes.length; x++) {\n        //aqui creamos las cartas con fotos de los animales e indices sus nombres\n        var item_html = '<img class=\"item\" onclick=\"clic(this)\" data-baraja=\"{baraja}\" data-indice=\"{indice}\" src=\"../assets/Fotos_mujeres/' + imagenes[x] + '\" height=\"100px\" >';\n        cartas_html2 += item_html.replace(\"{baraja}\", 2).replace(\"{indice}\", arraydescripcion[x]);\n      } //contenedor.innerHTML = cartas_html;\n\n\n      nombres.innerHTML = cartas_html1;\n      fotos.innerHTML = cartas_html2;\n    } catch (error) {\n      console.log(error);\n    }\n  }, //Funcion para ejecutar la accion por cada click que hacemos\n  clic = function clic(element) {\n    try {\n      this.classList.push(\"glow\");\n      var cartas_activas = document.querySelectorAll(\".sin-fondo-item\");\n\n      if (cartas_activas.length == 2) {\n        for (var i = 0; i < cartas_activas.length; i++) {\n          cartas_activas[i].classList.remove(\"sin-fondo-item\");\n          cartas_activas[i].innerHTML = \"\";\n        }\n\n        restarVidas();\n      }\n\n      if (cartas_activas.length == 1) {\n        if (cartas_activas[0].dataset.indice == element.dataset.indice && cartas_activas[0].dataset.baraja != element.dataset.baraja) {\n          element.innerHTML = \"<span class='numero-carta'></span>\";\n          cartas_activas[0].classList.remove(\"sin-fondo-item\");\n          cartas_activas[0].classList.add(\"checked-item\");\n          element.classList.add(\"checked-item\");\n        } else {\n          element.classList.add(\"sin-fondo-item\");\n          element.innerHTML = \"<span class='numero-carta'>\" + element.dataset.indice + \"</span>\";\n        }\n      } else {\n        element.classList.add(\"sin-fondo-item\");\n        element.innerHTML = \"<span class='numero-carta'>\" + element.dataset.indice + \"</span>\";\n      } //Si todas cartas estan verificadas, nos saca el mensaje de victoria\n\n\n      if (document.querySelectorAll(\".checked-item\").length == arraynombres.length * 2) {\n        var mensaje = document.querySelector(\"#contenedor-mensaje-victoria\");\n\n        if (mensaje.classList.contains(\"ocultar-mensaje\")) {\n          mensaje.classList.remove(\"ocultar-mensaje\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, //funcion para restar las vidas por cada fallo que cometemos\n  restarVidas = function restarVidas() {\n    try {\n      if (vidas == 1) {\n        var mensaje = document.querySelector(\"#contenedor-mensaje-derrota\");\n\n        if (mensaje.classList.contains(\"ocultar-mensaje\")) {\n          mensaje.classList.remove(\"ocultar-mensaje\");\n        }\n      }\n\n      document.querySelector(\".puntos\").querySelectorAll(\"img\")[0].remove();\n      --vidas;\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Funcion para repartir las cartas aleatoriamente\n\n  distribuirCartas = function distribuirCartas(arr) {\n    try {\n      var i, j, temp;\n\n      for (i = arr.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n      }\n\n      return new Array().concat(arr);\n    } catch (error) {\n      console.log(error);\n    }\n  }, init = function init() {\n    try {\n      crearCartas();\n      var botones = document.querySelectorAll(\".btn\");\n\n      for (var i = 0; i < botones.length; i++) {\n        botones[i].addEventListener('click', function () {\n          location.reload(true);\n        }, false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return {\n    init: init,\n    clic: clic\n  };\n}();\n\nwindow.onload = juego.init();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/match.js\n");
>>>>>>> 51bf1c69a884857fb87f65d39b761e40a5312c4d

/***/ }),

/***/ 9:
/*!*************************************!*\
  !*** multi ./resources/js/match.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

<<<<<<< HEAD
module.exports = __webpack_require__(/*! C:\xampp\htdocs\DAW2Reto2\resources\js\match.js */"./resources/js/match.js");
=======
module.exports = __webpack_require__(/*! C:\xampp\htdocs\reto2evaluacionm\DAW2Reto2\resources\js\match.js */"./resources/js/match.js");
>>>>>>> 51bf1c69a884857fb87f65d39b761e40a5312c4d


/***/ })

/******/ });